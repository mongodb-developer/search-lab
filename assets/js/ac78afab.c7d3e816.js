"use strict";(self.webpackChunksearch_party_lab=self.webpackChunksearch_party_lab||[]).push([[16],{2209:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=o(5893),t=o(1151);const a={},s="\ud83d\udcd8 The range Operator",c={id:"search-operators/range",title:"\ud83d\udcd8 The range Operator",description:"The range operator is similar to equals but works on ranges of values.",source:"@site/docs/5-search-operators/05-range.mdx",sourceDirName:"5-search-operators",slug:"/search-operators/range",permalink:"/search-lab/docs/search-operators/range",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/search-lab/blob/main/docs/5-search-operators/05-range.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcd8 The equals operator",permalink:"/search-lab/docs/search-operators/equals"},next:{title:"\ud83d\udcd8 Scoring",permalink:"/search-lab/docs/search-operators/scoring"}},i={},l=[];function d(e){const r={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,t.a)(),...e.components},{Link:o}=r;return o||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Link",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsxs)(r.h1,{id:"-the-range-operator",children:["\ud83d\udcd8 The ",(0,n.jsx)(r.code,{children:"range"})," Operator"]})}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"range"})," operator is similar to ",(0,n.jsx)(r.code,{children:"equals"})," but works on ranges of values."]}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"range"})," operator has the following syntax. You can find more explanation about it in the ",(0,n.jsx)(o,{to:"https://www.mongodb.com/docs/atlas/atlas-search/range/",children:"documentation"}),"."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-js",children:'{\n   "$search": {\n      "index": <index name>, // optional, defaults to "default"\n      "range": {\n         "path": "<field-to-search>",\n         "gt | gte": <value-to-search>,\n         "lt | lte": <value-to-search>,\n         "score": <score-options>\n      }\n   }\n}\n'})}),"\n",(0,n.jsxs)(r.p,{children:["This could be useful if you wanted to query only for books that have a range of pages. Say you only want books between 100 and 300 pages. You could use the ",(0,n.jsx)(r.code,{children:"range"})," operator to refine your results."]})]})}function h(e={}){const{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,r,o)=>{o.d(r,{Z:()=>c,a:()=>s});var n=o(7294);const t={},a=n.createContext(t);function s(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);