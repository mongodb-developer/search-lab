"use strict";(self.webpackChunksearch_party_lab=self.webpackChunksearch_party_lab||[]).push([[2781],{2610:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>n,metadata:()=>i,toc:()=>l});var t=o(4848),a=o(8453);const n={},s="\ud83d\udcd8 The equals Operator",i={id:"search-operators/equals",title:"\ud83d\udcd8 The equals Operator",description:"The equals operator is used to search for a specific value in a field. It is similar to the match operator, but the operation will be performed by Lucene and can be combined with other operators to refine results.",source:"@site/docs/5-search-operators/04-equals.mdx",sourceDirName:"5-search-operators",slug:"/search-operators/equals",permalink:"/search-lab/docs/search-operators/equals",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/search-lab/blob/main/docs/5-search-operators/04-equals.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcd8 The phrase Operator",permalink:"/search-lab/docs/search-operators/phrase"},next:{title:"\ud83d\udcd8 The range Operator",permalink:"/search-lab/docs/search-operators/range"}},c={},l=[];function d(e){const r={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components},{Link:o}=r;return o||function(e,r){throw new Error("Expected "+(r?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Link",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsxs)(r.h1,{id:"-the-equals-operator",children:["\ud83d\udcd8 The ",(0,t.jsx)(r.code,{children:"equals"})," Operator"]})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"equals"})," operator is used to search for a specific value in a field. It is similar to the ",(0,t.jsx)(r.code,{children:"match"})," operator, but the operation will be performed by Lucene and can be combined with other operators to refine results."]}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"equals"})," operator has the following syntax. You can find more explanation about it in the ",(0,t.jsx)(o,{to:"",children:"documentation"}),"."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:'{\n   $search: {\n      "index": <index name>, // optional, defaults to "default"\n      "equals": {\n         "path": "<field-to-search>",\n         "value": <boolean-value>|<objectId>|<number>|<date>,\n         "score": <score-options>\n      }\n   }\n}\n'})}),"\n",(0,t.jsx)(r.p,{children:"This could be useful if you wanted to query only for books that were published in a specific year."})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,o)=>{o.d(r,{R:()=>s,x:()=>i});var t=o(6540);const a={},n=t.createContext(a);function s(e){const r=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(n.Provider,{value:r},e.children)}}}]);