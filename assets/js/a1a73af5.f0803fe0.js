"use strict";(self.webpackChunksearch_party_lab=self.webpackChunksearch_party_lab||[]).push([[2877],{8834:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var r=t(5893),o=t(1151);const s={},c="\ud83d\udcd8 Complete Code example",a={id:"hybrid-search/complete-example",title:"\ud83d\udcd8 Complete Code example",description:"Here's the complete example code to implement a hybrid search against the books collection.",source:"@site/docs/8-hybrid-search/3-complete-example.mdx",sourceDirName:"8-hybrid-search",slug:"/hybrid-search/complete-example",permalink:"/search-lab/docs/hybrid-search/complete-example",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/search-lab/blob/main/docs/8-hybrid-search/3-complete-example.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcd8 Building the Hybrid Search Pipeline",permalink:"/search-lab/docs/hybrid-search/implementing-hybrid-search"},next:{title:"\ud83e\uddb8\u200d\u2642\ufe0f Hybrid Search Exercise",permalink:"/search-lab/docs/hybrid-search/exercise"}},i={},l=[];function d(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"-complete-code-example",children:"\ud83d\udcd8 Complete Code example"})}),"\n",(0,r.jsx)(n.p,{children:"Here's the complete example code to implement a hybrid search against the books collection."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'db.books.aggregate([\n  // Vector search on book synopsis embeddings\n  {\n    $vectorSearch: {\n      index: "books_synopsis_vector",\n      path: "embeddings",\n      queryVector: [0.023, -0.345, 0.122, ...], // Example query vector\n      numCandidates: 100,\n      limit: 20\n    }\n  },\n  // Add vector search score\n  {\n    $set: {\n      vector_score: { $meta: "vectorSearchScore" }\n    }\n  },\n  // Combine with text search on title and author\n  {\n    $search: {\n      index: "books_text_index",\n      compound: {\n        should: [\n          {\n            text: {\n              query: "mystery novel",\n              path: "title",\n              score: { boost: { value: 3 } }\n            }\n          },\n          {\n            text: {\n              query: "mystery novel",\n              path: "authors.name",\n              score: { boost: { value: 2 } }\n            }\n          }\n        ]\n      }\n    }\n  },\n  // Add text search score\n  {\n    $set: {\n      text_score: { $meta: "searchScore" }\n    }\n  },\n  // Combine scores\n  {\n    $addFields: {\n      combined_score: {\n        $add: [\n          { $multiply: ["$vector_score", 0.6] },\n          { $multiply: ["$text_score", 0.4] }\n        ]\n      }\n    }\n  },\n  // Sort and limit results\n  { $sort: { combined_score: -1 } },\n  { $limit: 5 },\n  // Project final results\n  {\n    $project: {\n      title: 1,\n      authors: 1,\n      synopsis: 1,\n      combined_score: 1,\n      vector_score: 1,\n      text_score: 1\n    }\n  }\n])\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>c});var r=t(7294);const o={},s=r.createContext(o);function c(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);